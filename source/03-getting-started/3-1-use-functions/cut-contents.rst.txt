============================
関数でまとまった処理を扱おう
============================

.. functions章として関数を使う〜定義するが1つの章だったときのリード文

変数を使ったプログラムを書けるようになりましたね。
1年の秒数を求めたときは、変数に代入する処理を何回か実行して求めました。
このような一連の処理を、プログラマーは *まとめて* 扱います。
処理をまとめることについて、この章で考えていきましょう。

関数とは
============================

処理をする箱
--------------------------------

.. 予防線を張りすぎな気がするのでカット

（本書に登場する「関数」という語はプログラミングにおける関数を指します）

関数のイメージ：自動販売機
--------------------------------

.. 密レビューコメントを受けてカット

自動販売機は、飲み物が買える装置です（飲み物以外も買える自動販売機もありますが、ここでは飲み物とします）。

.. 文章量を減らす中でカット

プログラミングでは言葉で説明されるよりも手を動かしたほうが理解しやすい部分があります（まさしく百聞は一見にしかずです）。

関数を使ってみよう：文字列の長さを数える
========================================================

関数の使い方
--------------------------------

.. 関数の実行という言い回しが混乱しそうなのでカット

**カッコは、関数の実行を意味し** ます。
関数の実行に必要なものはカッコの中に入れます。

.. type関数のコラムのうち、本文の中でまだ説明していない部分をカット

.. column:: 関数を使ってみよう：データの型を確認する

    .. figure:: images/4/4-10-type_document.png
        :align: center

        ``type`` 関数のドキュメント

    ``type`` 関数に変数を渡すこともできます。
    変数が計算に使われるときと同じように、変数が指す値について ``type`` 関数が適用され、型が確認されます。

    .. code-block:: python

        >>> a = 4
        >>> type(a)
        <class 'int'>
    
    ``type`` 関数は、例えば、プログラム中の変数の型を確認するのに使われます（``print`` 関数と合わせて）。
    プログラマーは人間なので、思い違いをするものです。
    ある変数の指す値を整数だと思って処理を書いてところ、結果が思っているのと違うというようなことはよく起こります。
    整数だと思っている変数の値を ``type`` 関数で確認すると、整数でないことが分かり、プログラムの修正に役立ちます。

.. 上のコラムの最終段落は「入力と出力」で使えるかもしれない

関数をもう少し詳しく知ろう
========================================================

関数を表す用語
--------------------------------

.. 取るは、形式的な引数のように思えるので、混在を避けるためにカット。あまり使わない言い回しかもしれない

- ``"こんにちは"`` を ``len`` 関数の引数に取る

関数と変数
--------------------------------

関数に変数を入力する
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. 変数の名前 ``a`` の文字数 はかえって混乱しそうなのでカット（変数のところで「指す値」で掴んでいると想定する）

変数 ``a`` が指す値 ``"こんにちは世界"`` の長さが求まりました（変数の名前 ``a`` の文字数ではないですよね）。
変数が指す値を関数に渡しています。

関数の結果を変数に代入する
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. importの話題はまだ出てこないのでカット

.. column:: Pythonの組み込み関数

    組み込み関数は使うための準備が必要なく、いつでも使うことができます。
    ``len`` 以外にもよく使う処理は、組み込み関数として用意されています。
