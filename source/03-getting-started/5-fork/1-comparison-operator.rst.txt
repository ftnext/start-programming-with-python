.. _fork:

============================
3大構造 二. 分岐
============================

この章では、プログラムの3大構造の2つ目「分岐（ぶんき）」を学びます。
分岐とは、「**条件** に従って **処理を** いくつかに **分け** 、そのうちの **どれか1つを実行** する」ことです。

.. 手元の『基本情報技術者教科書 平成28年度』
    「選択型（分岐型）は条件に従って処理の流れを分岐させる制御構造」(p.107)

例えば、ふだんの生活では、お酒を買う時に年齢確認が求められます。
年齢確認の後、店員が行う処理は、次のように *分岐* しています。

- お客が20歳以上であれば、お酒を売る
- お客が20歳以上でなければ、お酒を売らない

確認した年齢をもとに、どちらかの処理を実行しますね。

.. ref: https://ja.wikipedia.org/wiki/%E5%B9%B4%E9%BD%A2%E7%A2%BA%E8%AA%8D
    年齢確認では、購入者の年齢が20歳以上かどうかを確認します。

分岐は ``if`` 文（イフぶん）で実現します。
次の順番で見ていきましょう。

1. ``if`` 文で条件を表すのに使う「比較演算子」をまず説明します。
2. ``if`` 文について説明します。

.. ``if`` 文というマークアップをした表記はPythonチュートリアルにも見られる
    https://docs.python.org/ja/3/tutorial/controlflow.html#if-statements

比較演算子
============================

.. https://docs.python.org/ja/3/reference/expressions.html#comparisons

処理系に数の大小を評価させる
------------------------------------

年齢確認の例は「年齢が20歳以上と言えるか」と捉えられます。

- 年齢が25歳のときは、20歳以上と言えます
- 年齢が19歳のとき、20歳以上とは言えません

「年齢が20歳以上と言えるか」のような **数の大小関係** は、プログラミングして **式で表せます**。
そして、プログラミング言語処理系は、その **式を評価** できます。
評価結果は、**人間が大小関係を判定するときと同じ** になります。

「年齢が20歳以上と言えるか」を式で表すときに使うのが **比較演算子** です。
例えば「以上」の比較演算子は ``>=`` です。

.. ref: https://docs.python.org/ja/3/reference/datamodel.html#object.__le__

比較演算子を使った式の評価結果は、次の **2つの値のいずれか** です。

.. list-table:: 比較演算子を使った式の評価結果
    :align: center

    * - 値
      - 読み
      - 意味
    * - ``True``
      - トゥルー
      - 言える
    * - ``False``
      - フォールス
      - 言えない

プログラミングでは ``True`` と ``False`` のことを、「真理値（しんりち）」（または「真偽値（しんぎち）」「ブール値（ブールち）」）と呼びます。

.. https://docs.python.org/ja/3/library/stdtypes.html#boolean-values
    ブール値は二つの定数オブジェクト False および True です。これらは真理値を表すのに使われます

.. https://docs.python.org/ja/3/reference/datamodel.html#object.__lt__
    慣例として、正常に比較が行われたときには False か True を返します。

例：年齢が20歳以上と言えるか
------------------------------------

比較演算子に慣れるため、対話モードで練習しましょう。

「年齢が20歳以上と言えるか」を式で表す練習です。
年齢を変数 ``nenrei`` で表すと、``nenrei >= 20`` という式で表せます。

``nenrei`` が ``25`` を指すとき、``nenrei`` は20歳以上でしょうか？

.. code-block:: python

    >>> nenrei = 25
    >>> nenrei >= 20
    True

25歳は20歳以上と言えますよね。
人間の判定と同じように、処理系も ``True`` と評価しました。

``nenrei`` が指す値を ``19`` に変えた次の例では、20歳以上と言えるでしょうか？

.. code-block:: python

    >>> nenrei = 19
    >>> nenrei >= 20
    False

19歳は20歳以上とは言えませんね。
処理系も ``False`` と評価しました。

``nenrei`` に代入する数値を変えて試してみてください。

``if`` 文では、**変数と比較演算子を使った式** を使って、**分岐の条件を表し** ます。

本章で登場する比較演算子
------------------------------------

比較演算子の中から、本章では、「以上」 ``>=``、「より大きい」 ``>``、「等しい」 ``==`` を使います。
主な比較演算子の一覧は、章末の発展を見てください。

繰り返しますが、比較演算子を使った式を **処理系が評価した結果は、人間が大小関係を判定した結果と一致** します。

.. code-block:: python

    >>> nenrei = 20
    >>> nenrei > 20  # ((20は20より大きいとは言えません))
    False
    >>> nenrei == 20  # ((20は20と等しいと言えます))
    True
