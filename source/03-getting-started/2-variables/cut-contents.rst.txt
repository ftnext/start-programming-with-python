====================================
値を変数で扱おう
====================================

変数で値に名前を付けよう
============================

文字列に名前を付ける
------------------------------------

.. column:: 変数に使える文字の決まり

    .. programmer_thinkingでの説明と重複するのでカット

    本書では、プログラムの3大構造を学ぶパートで、ローマ字表記の変数を使います（例： ``goukei``、``goukei_kingaku``）。
    その後、実際にプログラムを書くパートでは、英単語を並べた変数を使っていきます。

    .. 文字列以外では半角英数記号を使うという原則をしっかり理解してもらうため、混乱を招きそうな情報はカット
    
    実は、アルファベット以外にひらがな・カタカナ・漢字を使うこともできます。

    .. code-block:: python

        >>> 万ザい = "万歳！"
        >>> 万ザい
        '万歳！'

    ひらがな・カタカナ・漢字による変数は、日本人しか分からないのであまり使われません（日本語を初めて見た方にはきっと入力が大変でしょう）。
    ほとんどの場合、変数にはアルファベットで名前が付けられます。

    .. 変数名のルール（識別子）：https://docs.python.org/ja/3/reference/lexical_analysis.html#identifiers

代入
============================

.. JavaScriptの ``let 変数名`` のように変数宣言だけすることがPythonではできないことを念頭に置いている（Pythonでは初期化とセット）
    →読者は初めてのプログラミングでPythonを知っていき、他の言語は知らないので、「Pythonでは」という言い回しはカット。

Pythonでは、変数と代入はセットです。
Pythonで変数を使うときは ``変数名 = 値`` と書いて、値を代入する必要があります（初期の値を代入します）。

代入の使い所
------------------------------------

.. programmer_thinking__naming と重複したことに気づきカット

ぴったりな名前を付けると、短時間で処理の意味を思い出せます
（これは他のプログラマーにとっても短時間で意味がつかめるということです）。

.. 本書を通じて、変数を変数に代入するコードが登場しないのでカットした

.. column:: 変数を変数に代入する？

    クイズ：``a2 = a`` を実行すると、``a2`` が指す値は何でしょうか。

    ヒント：この代入は ``seki2 = a * 6`` とそれほど変わりません。
    ``a * 6`` の計算結果が ``seki2`` に代入されるように、 ``a`` の計算結果（指す値）が ``a2`` に代入されます。

    正解は ``4`` です。
    変数 ``a`` が指すのと同じ値を変数 ``a2`` も指すようにするコードでした。

    .. code-block:: python

        >>> a2 = a
        >>> a2
        4

    .. figure:: images/3/3-10_assign_other_variable.drawio.png
        :align: center
        :width: 40%

        変数が指している値を、別の変数に代入

    .. ``a`` が指す ``4`` と ``a2`` が指す ``4`` は別物の認識
        よく使われる整数はidが最適化されるのでこの場合もidが一致するが、値渡ししているので値としては別物
        （つまり ``a += 1`` をしても ``a2`` に影響しない）

代入で変数を活用する
============================

同じ変数に繰り返し代入する
------------------------------------

.. 読者は他の言語は知らないので、「Pythonでは」という言い回しはカット

.. column:: Pythonでは型が違う値も同じ変数に代入できる

    Pythonでは、定義した変数にはどんな型の値でも制限なく代入できます。
    整数を指す変数 ``a`` に、文字列の値を代入してみましょう。

    .. code-block:: python

        >>> a = "こんにちは世界"

    .. figure:: images/3/3-12_assign_other_type.drawio.png
        :align: center

        ``a`` を整数に付けた名札から文字列に付けた名札に変更

    Pythonでは「どんな型の値でも同じ変数に繰り返し代入できる」というのは利点であると同時に注意すべき点でもあります。
    変数の指す値の型が変わることで、意図しない計算結果や、型が異なることによるエラー（TypeError）も起こりえます。
    ``a`` に文字列を代入したにもかかわらず、「整数を指している」という **思い込み** から、思わぬ計算結果になってしまう例を示します。

    .. code-block:: python

        >>> a * 6
        'こんにちは世界こんにちは世界こんにちは世界こんにちは世界こんにちは世界こんにちは世界'

    プログラミング言語の中には、変数という名札に型の制限を付ける言語もあります。
    整数用の変数、文字列用の変数といった具合です。
    整数用の変数には文字列を指す値を代入できません。

    Pythonのように、変数が指している値とは別の型の値を代入できるプログラミング言語を「動的型付け言語」と言います。
    それに対して、変数には指定した型の値しか代入できないプログラミング言語を「静的型付け言語」と言います。
    静的型付け言語の場合は、整数しか代入できない変数に文字列を代入しようとするとエラーになり、プログラムは実行されません。

    .. TODO：動的型付け／静的型付け 定義を確認

    また、複数回の代入ができないという制約を課して、この問題に対応しているプログラミング言語もあります。

    このようにプログラミング言語には違いがあります。
    この違いはそれぞれの言語の裏にある考え方・スタンスに由来します。
    「プログラミング言語〇〇が一番優れている！」のように比較することにはあまり意味はないと私たちは考えます。
    プログラマーの先人の言にあるように、一つのプログラミング言語に習熟した後に他のプログラミング言語を学ぶことはオススメです。
    型の制限や代入の制限に触れることで、プログラマーとして視野を広げられます。

    .. ソースは『達人プログラマー』（毎年新しい言語を1つ学ぼう）

練習問題
------------------------------------

.. 電卓の話は value_integer_string 章の1以来。プログラミングを電卓としては押し出していないのでカット

変数（代入）を学ぶ前はプログラミングは文字列も扱える電卓のようなものだったかもしれません。
変数を使うと、電卓ではできないようなことができます（続く章をお楽しみに！）。

.. 言い回しを変えてまとめの段落に入れた

また、本を読んで100%全部覚える必要はありません（一言一句正確に覚えるなんて不可能です！）。

.. column:: 代入を使って変数自身を更新する書き方の短縮形

    .. 累算代入の説明として厳密には間違っているので退避（不採用の意味）

    ``c += 2`` は、``c`` の現在の値に ``2`` を加えた結果（``5 + 2``）を ``c`` に代入します。
    慣れると、「``=`` の左側の変数の指す値を、右側の値 ``2`` だけ増やす」と読めます。

.. column:: 複数の変数に同時に代入する

    4つの変数に代入する例を見ておきましょう。

    .. code-block:: python

        >>> wa, sa, seki, sho = d + e, d - e, d * e, d / e
        >>> wa
        8
        >>> sa
        -2
        >>> seki
        15
        >>> sho
        0.6

    .. figure:: images/3/3-16_assign_multiple_variables2.drawio.png
        :align: center

        四則演算の結果を同時に代入
