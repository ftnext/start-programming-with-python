============================
プログラムの入力と出力を扱おう
============================

値を画面に表示する関数
========================================================

.. すぐファイルを使い始めるわけではない。説明が長くなりすぎないようにするためにカット

ファイルを実行する場合、変数の指す値を表示するときは、画面に表示するための関数を呼び出す必要があります。
つまり、ファイルに書かれたプログラムの途中で、ある変数の指す値を知りたいような場合に ``print`` 関数を使います。

入力を受け取る関数
============================

.. 順次より先にinput関数を紹介するので不要

この節は、プログラムの3大構造から離れて少し寄り道をします。
プログラムを実行している最中に、値を入力する方法を学びましょう。
「3大構造を早く全部知りたい！」という方は、先に進んで大丈夫です（必要になったら戻ってきてくださいね）。

.. column:: 文字列の新しい書き方：f文字列（エフもじれつ）

    .. 詳細に立ち入りすぎている感があるのでカット

    連結とf文字列の違いは、変数の指す値が文字列以外のときの挙動です。
    連結を使うとき、``namae`` の指す値が文字列でない場合、``TypeError`` となります。
    f文字列では、変数 ``namae`` の指す値が文字列でなくても、エラーは発生せず、その値が文字列中に入ります。

    .. code-block:: python

        >>> namae = 108
        >>> namae + "さん、ごきげんよう^o^"
        Traceback (most recent call last):
          File "<stdin>", line 1, in <module>
        TypeError: unsupported operand type(s) for +: 'int' and 'str'
        >>> f"{namae}さん、ごきげんよう^o^"
        '108さん、ごきげんよう^o^'
