.. _input_output:

========================================================
プログラムの入力と出力を扱おう
========================================================

プログラミング言語には「入力」と「出力」を扱う関数が用意されています。

* 入力（にゅうりょく）：実行中のプログラムに値を入れられます
* 出力（しゅつりょく）：実行中のプログラムが、式の評価結果を表示します

出力、入力の順で、関数を紹介します。
この章でも、対話モードに入力しながら読み進めてくださいね。

値を画面に表示する関数
========================================================

``print`` 関数は、渡した **引数の値を画面に表示** します。

.. figure:: images/4/4-12-print-document.png
    :align: center

    ``print`` 関数のドキュメント

.. list-table:: 値を画面に表示する関数
    :align: center

    * - 箱の名前
      - ``print``
    * - 箱は何をするか
      - 引数の値を画面に表示する
    * - 箱に入れるもの
      - 値
    * - 箱から出てくるもの
      - なし

.. 出力→表示「テキストストリーム file に表示し」 https://docs.python.org/ja/3/library/functions.html#print

1つだけ引数を渡す
--------------------------------

整数 ``123`` を ``print`` 関数に渡すと、それが画面に表示されます。

.. code-block:: python

    >>> print(123)
    123

.. figure:: images/4/4-13-print_box_image.drawio.png
    :align: center
    :width: 60%

    画面に123と表示する。返り値はない

``print`` 関数の引数として、数値だけでなく文字列も渡すことができます。

.. code-block:: python

    >>> print("こんにちは！")
    こんにちは！

引数として変数や式を渡したときは、**評価結果の値** が ``print`` 関数に渡されることになります。

.. code-block:: python

    >>> banzai = "万歳！"
    >>> print(banzai)
    万歳！

.. figure:: images/4/4-14-print_pass_variable.drawio.png
    :align: center
    :width: 80%

    変数の指す値が表示される

複数の引数を渡す
--------------------------------

``print`` 関数には、**2つ以上** の引数（値や式）を渡せます。
複数の引数は、**カンマ** （``,``） **で区切り** ます。

.. code-block:: python

    >>> a, b = 4, 6
    >>> print(a, "×", b, "=", a * b)  # ((×は「かける」を変換して出せます))
    4 × 6 = 24

複数の引数を渡したときは、左の引数から順に表示され、半角スペースが1つずつ入ります（見やすいですよね）。

.. figure:: images/4/4-15-print_pass_variables.drawio.png
    :align: center
    :width: 80%

    複数の引数を渡したときは、それらを表示する

``print`` 関数の使い所
--------------------------------

対話モードに変数を使った式を入力すれば、``print`` 関数なしでも評価結果を確認できますよね。
「なぜ ``print`` 関数を使うのだろう」と疑問に思うかもしれませんね。

実はプログラミングは、対話モードではあまり行いません。
**ファイル** に文を書いていきます。
対話モードに入力した式や文をプログラムと呼んできましたが、文がいくつも書かれたファイルをプログラムと呼ぶのが一般的です。
**処理系にファイル（プログラム）を実行させ** て、まとまった処理の結果を得ます。

**ファイルを実行する中で、変数の指す値を表示したい** とき、``print`` 関数の出番です。
:numref:`in_order` 「:ref:`in_order`」から対話モードの代わりにファイルを使い始めます。
``print`` 関数も頻繁に使いますよ！

.. advanced:: 返り値のない関数と「副作用」

    .. ref: nrsさんのYouTubeより 副作用があるから戻り値がない https://youtu.be/4s1LuulooIM

    ``print`` 関数は返り値のない関数です。
    ただ、処理の中で画面の状態を変えています。

    プログラミングの関数は一般に、**返り値を持たないときになにかの状態を変えます**。
    状態を変えるとは、画面に表示したり、ファイルを新規作成したりすることです。
    なにかの状態を変えることを **副作用** と呼びます。
